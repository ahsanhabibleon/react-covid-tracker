{"version":3,"sources":["Header.js","InfoBox.js","CasesByCountry.js","CovidChart.js","util.js","Map.js","App.js","index.js"],"names":["Header","countries","setQueryString","useState","country","setCountry","className","FormControl","variant","InputLabel","id","Select","labelId","value","onChange","event","countryCode","target","label","MenuItem","map","index","name","InfoBox","extraClass","title","cases","total","loading","onClick","active","Card","Typography","color","CardContent","useStyles","makeStyles","theme","card","padding","spacing","textAlign","width","palette","text","secondary","marginBottom","CasesByCountry","tableData","classes","tr","numeral","format","height","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","tooltipItem","data","scales","xAxes","type","time","parser","tooltipFormat","yAxes","gridLines","ticks","callback","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","CovidChart","setData","useEffect","a","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","casesTypeColors","hex","multiplier","recovered","deaths","prettyPrintStat","stat","drawCirclesOnTheMap","Circle","center","countryInfo","lat","long","fillOpacity","fillColor","Math","sqrt","Popup","src","flag","alt","Map","zoom","MapContainer","TileLayer","url","attribution","App","api","setCountries","queryString","dataStorage","setDataStorage","setLoading","setTableData","lng","setCenter","setZoom","mapCountries","setMapCountries","setCasesType","getCountries","res","iso3","getDataUrlByCountry","Grid","container","item","xs","sm","query","filter","todayCases","todayRecovered","todayDeaths","sort","b","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae98af7f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { InputLabel, MenuItem, FormControl, Select } from '@material-ui/core';\nimport './Header.scss'\n\nfunction Header({ countries, setQueryString }) {\n\n    const [country, setCountry] = useState(\"worldwide\")\n    const handleChange = (event) => {\n        const countryCode = event.target.value;\n        setCountry(countryCode);\n        setQueryString(countryCode);\n    };\n\n    return (\n        <div className=\"app_header\">\n            <div className=\"app__header__title\">\n                <h1>Covid-19 Live Tracker</h1>\n            </div>\n            <div className=\"app__header__select-box\">\n                <FormControl variant=\"outlined\" className=\"app__form-control\" >\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Countries</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        value={country}\n                        onChange={handleChange}\n                        label=\"Countries\"\n                    >\n                        <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n\n                        {countries.map((country, index) => (\n                            <MenuItem key={index} value={country.value}>{country.name}</MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport './InfoBox.scss';\nimport { Card, CardContent, Typography } from '@material-ui/core';\n\nfunction InfoBox({extraClass, title, cases, total, loading, onClick , active}) {\n    return loading ? (\n\n        <Card className=\"infoBox\">\n            <Typography color=\"textSecondary\">\n                <span className=\"infoBox__loading\">Loading...</span>\n            </Typography>\n        </Card>\n\n    ) : (\n            <Card className={`infoBox ${extraClass} ${active && 'infoBox--active'}`} onClick={onClick}>\n                <CardContent className=\"infoBox__inner\">\n                    <Typography color=\"textSecondary\">{title}</Typography>\n                    <h5><span>+{cases}</span></h5>\n                    <Typography color=\"textSecondary\" className=\"total\"><span>{total}</span> Total</Typography>\n                </CardContent>\n            </Card>\n        )\n}\nexport default InfoBox\n","import React from 'react'\nimport { Card } from '@material-ui/core'\nimport './CasesByCountry.scss'\nimport { makeStyles } from '@material-ui/core/styles'\nimport numeral from 'numeral'\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        padding: theme.spacing(2),\n        textAlign: 'left',\n        width: \"100%\",\n        color: theme.palette.text.secondary,\n    },\n    title: {\n        marginBottom: '1rem'\n    }\n}));\n\nfunction CasesByCountry({ tableData }) {\n    const classes = useStyles();\n    return (\n        <Card className={classes.card}>\n            <h3 className={classes.title}>Live Cases by Country</h3>\n            <div className=\"table__wrapper\">\n                <table className=\"table\">\n                    <tbody>\n                        {tableData.map((tr, index) => (\n                            <tr key={index}>\n                                <td>{tr.country}</td>\n                                <th><strong>{numeral(tr.cases).format(0, 0)}</strong></th>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </Card>\n    )\n}\n\nexport default CasesByCountry\n","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { Card } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        width: \"100%\",\n        color: theme.palette.text.secondary,\n        height: \"38.5vh\"\n    },\n}));\n\nconst options = {\n    legend: {\n        display: false,\n    },\n    elements: {\n        point: {\n            radius: 0,\n        },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n        mode: \"index\",\n        intersect: false,\n        callbacks: {\n            label: function (tooltipItem, data) {\n                return numeral(tooltipItem.value).format(\"+0,0\");\n            },\n        },\n    },\n    scales: {\n        xAxes: [\n            {\n                type: \"time\",\n                time: {\n                    parser: \"MM/DD/YY\",\n                    tooltipFormat: \"ll\",\n                },\n            },\n        ],\n        yAxes: [\n            {\n                gridLines: {\n                    display: false,\n                },\n                ticks: {\n                    // Include a dollar sign in the ticks\n                    callback: function (value, index, values) {\n                        return numeral(value).format(\"0a\");\n                    },\n                },\n            },\n        ],\n    },\n};\n\nconst buildChartData = (data, casesType) => {\n    let chartData = [];\n    let lastDataPoint;\n    for (let date in data.cases) {\n        if (lastDataPoint) {\n            let newDataPoint = {\n                x: date,\n                y: data[casesType][date] - lastDataPoint,\n            };\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n};\n\nfunction CovidChart({ casesType }) {\n    const classes = useStyles();\n    const [data, setData] = useState({});\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n                .then((response) => {\n                    return response.json();\n                })\n                .then((data) => {\n                    let chartData = buildChartData(data, casesType);\n                    setData(chartData);\n                });\n        };\n\n        fetchData();\n    }, [casesType]);\n\n    return (\n        <Card className={classes.card}>\n            {data?.length > 0 && (\n                <Line\n                    data={{\n                        datasets: [\n                            {\n                                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                                borderColor: \"#CC1034\",\n                                data: data,\n                            },\n                        ],\n                    }}\n                    options={options}\n                />\n            )}\n        </Card>\n    );\n}\n\nexport default CovidChart;\n","import React from 'react'\nimport numeral from 'numeral'\nimport { Circle, Popup } from 'react-leaflet'\nexport const sortData = (data) => {\n    return [...data].sort((a, b) => a.cases > b.cases ? -1 : 1)\n}\n\n// Draw circles on the map\nconst casesTypeColors = {\n    cases: {\n        hex: \"#cc1034\",\n        multiplier: 400\n    },\n    recovered: {\n        hex: \"green\",\n        multiplier: 800\n    },\n    deaths: {\n        hex: \"red\",\n        multiplier: 2000\n    },\n}\n\nexport const prettyPrintStat = (stat) => stat ? `${numeral(stat).format('0.0a')}` : \"0\"\nexport const drawCirclesOnTheMap = (data, casesType = \"cases\") => {\n    return data.map((country, index) => (\n        <Circle\n            key={index}\n            center={[country.countryInfo.lat, country.countryInfo.long]}\n            fillOpacity={0.4}\n            color={casesTypeColors[casesType].hex}\n            fillColor={casesTypeColors[casesType].hex}\n            radius={\n                Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n            }\n        >\n            <Popup>\n                <div className=\"info-container\">\n                    <div className=\"info-flag\">\n                        <img src={country.countryInfo.flag} alt={country.countryInfo.flag} />\n                    </div>\n                    <div className=\"info-country\">{country.country}</div>\n                    <div className=\"info-cases\">Cases: {numeral(country.cases).format(0, 0)} </div>\n                    <div className=\"info-recovered\">Recovered: {numeral(country.recovered).format(0, 0)} </div>\n                    <div className=\"info-deaths\">Deaths: {numeral(country.deaths).format(0, 0)} </div>\n                </div>\n            </Popup>\n        </Circle>\n    ))\n}\n","import React from 'react'\nimport { Card } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport { drawCirclesOnTheMap } from './util'\nimport './Map.scss'\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    width: \"100%\",\n    color: theme.palette.text.secondary,\n    height: \"56vh\"\n  },\n}));\n\nfunction Map({ countries, casesType, center, zoom }) {\n  const classes = useStyles();\n  return (\n    <Card className={classes.card}>\n      <MapContainer center={center} zoom={zoom}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {drawCirclesOnTheMap(countries, casesType)}\n      </MapContainer>\n    </Card>\n\n  )\n}\n\nexport default Map\n\n\n","import React, { useState, useEffect } from 'react';\nimport Header from './Header'\nimport InfoBox from './InfoBox'\nimport CasesByCountry from './CasesByCountry'\nimport CovidChart from './CovidChart'\nimport Map from './Map'\nimport { Grid } from '@material-ui/core'\nimport './App.scss'\nimport { sortData, prettyPrintStat } from './util.js'\nimport 'leaflet/dist/leaflet.css'\n\nconst App = () => {\n  const apiAllCountries = \"https://disease.sh/v3/covid-19/all\"\n  const api = \"https://disease.sh/v3/covid-19/countries/\"\n  const [countries, setCountries] = useState([\"\"])\n  const [queryString, setQueryString] = useState('worldwide')\n  const [dataStorage, setDataStorage] = useState(\"\")\n  const [loading, setLoading] = useState(\"true\")\n  const [tableData, setTableData] = useState('')\n  const [center, setCenter] = useState({ lat: 34.80746, lng: -40.4796 })\n  const [zoom, setZoom] = useState(\"2\")\n  const [mapCountries, setMapCountries] = useState([])\n  const [casesType, setCasesType] = useState(\"cases\")\n\n  const getCountries = async () => {\n    await fetch(api)\n      .then(res => res.json())\n      .then(data => {\n        const countries = data.map(country => {\n          return {\n            name: country.country,\n            value: country.countryInfo.iso3,\n          }\n        })\n        setCountries(countries)\n        setTableData(data)\n        setMapCountries(data)\n      })\n  }\n\n  const getQueryString = (query) => {\n    setQueryString(query)\n    mapCountries.filter(x => {\n      if (x.countryInfo.iso3 === query) {\n        setCenter(\n          {\n            lat: x.countryInfo.lat,\n            lng: x.countryInfo.long\n          }\n        )\n        setZoom(\"4\")\n      }\n    })\n  }\n\n  const getDataUrlByCountry = async () => {\n    const url = queryString === 'worldwide' ? apiAllCountries : api + queryString;\n    await fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        setDataStorage(data)\n        setLoading(false)\n      })\n  }\n\n  useEffect(() => {\n    getCountries()\n  }, [])\n\n  useEffect(() => {\n    getDataUrlByCountry()\n  }, [queryString])\n\n  return (\n    <div className=\"App\">\n      <div className=\"app__container\">\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <div className=\"flex-direction-column\">\n              <Header setQueryString={getQueryString} countries={countries} />\n              <div className=\"app__infobox__wrapper flex-grow-one\">\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={4}>\n                    <InfoBox\n                      active={casesType === 'cases'}\n                      onClick={() => setCasesType(\"cases\")}\n                      title=\"Corona Virus Cases\"\n                      cases={prettyPrintStat(dataStorage.todayCases)}\n                      total={prettyPrintStat(dataStorage.cases)}\n                      loading={loading} />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <InfoBox\n                      active={casesType === 'recovered'}\n                      extraClass=\"recovered\"\n                      onClick={() => setCasesType(\"recovered\")}\n                      title=\"Recovered\"\n                      cases={prettyPrintStat(dataStorage.todayRecovered)}\n                      total={prettyPrintStat(dataStorage.recovered)}\n                      loading={loading} />\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <InfoBox\n                      active={casesType === 'deaths'}\n                      onClick={() => setCasesType('deaths')}\n                      title=\"Deaths\"\n                      cases={prettyPrintStat(dataStorage.todayDeaths)}\n                      total={prettyPrintStat(dataStorage.deaths)}\n                      loading={loading} />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Map\n                      casesType={casesType}\n                      countries={mapCountries}\n                      center={center}\n                      zoom={zoom} />\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </Grid>\n          <Grid item xs={12} sm={4} className=\"flex-direction-column\">\n            <Grid container spacing={3} className=\"flex-grow-one\">\n              <Grid item xs={12} className=\"fullheight__parent\">\n                <CasesByCountry tableData={sortData(tableData)} />\n              </Grid>\n              <Grid item xs={12} className=\"fullheight__parent\">\n                <CovidChart casesType={casesType} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}